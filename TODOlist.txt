Aleksander (the non shady one):
  Cyclic order counter logic, fix state machine.
    initialize properly when reconnecting (refuse to take hallorders if not connected to network)

Aleksander (the shady one):
  Do networking logic with order states and continous brodcasting, pass information from other elevators to calculate local order states.
  Function to return all active elevators, and to get list of orderstates for specific ordertype for all elevators.
  Networking appears to not work.
 
ias (the one and only):
  Cost function for assigning orders using information about local elevator state and states of other elevators. 
  Kun hall orders blir bestemt behandlet, mens cab orders m√• ta del i beregningen.
  
Someone (pls just anybody):
Bugs
If all elevators disconnects at the same time, the request matrix ix messed up
check if elevator was just connected when syncronizing (ignore it), when connecting to network
if all elevators have the same timestamp, not all elevators get the same order matrix when resyncronizing


sudo iptables -A INPUT -p tcp --dport 15657 -j ACCEPT
sudo iptables -A INPUT -p tcp --sport 15657 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 12345 -j ACCEPT
sudo iptables -A INPUT -p tcp --sport 12345 -j ACCEPT
sudo iptables -A INPUT -p tcp --dport 11111 -j ACCEPT
sudo iptables -A INPUT -p tcp --sport 11111 -j ACCEPT

sudo iptables -A INPUT -j DROP


-----------------------------
Network states:
map content:
	[0] key: 10.100.23.13:15657, value: {0 -1 true [[0 0 0] [2 2 0] [2 2 0] [0 2 0]] false map[10.100.23.13:11111:[0 0 0 0] 10.100.23.13:12345:[0 0 0 0]] 2023-04-14 13:36:31.753627487 +0200 CEST}
	[1] key: 10.100.23.13:11111, value: {1 1 true [[0 0 0] [0 2 0] [2 2 0] [0 2 0]] false map[10.100.23.13:12345:[0 0 0 0] 10.100.23.13:15657:[0 0 0 0]] 2023-04-14 13:36:31.876854512 +0200 CEST}
Connected nodes:
[]string{"10.100.23.13:11111", "10.100.23.13:15657"}
LastRequestUpdateTime: 2023-04-14 13:36:31.958238437 +0200 CEST m=+35.294094329

-----------------------------
-----------------------------
Network states:
map content:
	[0] key: 10.100.23.13:12345, value: {0 -1 true [[0 0 0] [2 2 0] [2 2 0] [0 2 0]] false map[10.100.23.13:11111:[0 0 0 0] 10.100.23.13:15657:[0 0 0 0]] 2023-04-14 13:36:31.958238437 +0200 CEST}
	[1] key: 10.100.23.13:11111, value: {1 1 true [[0 0 0] [0 2 0] [2 2 0] [0 2 0]] false map[10.100.23.13:12345:[0 0 0 0] 10.100.23.13:15657:[0 0 0 0]] 2023-04-14 13:36:31.876854512 +0200 CEST}
Connected nodes:
[]string{"10.100.23.13:11111", "10.100.23.13:12345"}LastRequestUpdateTime: 2023-04-14 13:36:32.004074569 +0200 CEST m=+37.224697987

-----------------------------
-----------------------------
Network states:
map content:
	[0] key: 10.100.23.13:15657, value: {0 -1 true [[0 0 0] [2 2 0] [2 2 0] [0 2 0]] false map[10.100.23.13:11111:[0 0 0 0] 10.100.23.13:12345:[0 0 0 0]] 2023-04-14 13:36:31.753627487 +0200 CEST}
	[1] key: 10.100.23.13:12345, value: {0 -1 true [[0 0 0] [2 2 0] [2 2 0] [0 2 0]] false map[10.100.23.13:11111:[0 0 0 0] 10.100.23.13:15657:[0 0 0 0]] 2023-04-14 13:36:31.958238437 +0200 CEST}
Connected nodes:
[]string{"10.100.23.13:12345", "10.100.23.13:15657"}LastRequestUpdateTime: 2023-04-14 13:36:32.004098701 +0200 CEST m=+33.633181245

-----------------------------





